name: CI

on:
    push:
        branches: ["*"]
        paths:
            - "gamb-front/**"
            - "gamb-back/**"
            - ".github/workflows/CI.yml"
    pull_request:
        branches: ["*"]
        paths:
            - "gamb-front/**"
            - "gamb-back/**"
            - ".github/workflows/CI.yml"

jobs:
    back:
        runs-on: ubuntu-latest
        env:
            DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
            DEBUG: ${{ secrets.DEBUG }}
            DJANGO_LOGLEVEL: ${{ secrets.DJANGO_LOGLEVEL }}
            DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
            DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
            DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
            DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
            DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
       
        steps:
            - uses: actions/checkout@v4

            # Configura o Docker Buildx
            - name: Instalar Docker Compose
              run: sudo apt-get update && sudo apt-get install -y docker-compose

            # Rodar os containers Docker (web + db + redis)
            - name: Run up
              run: |
                  cd gamb-back
                  docker-compose up  -d

            - name: Run tests inside Docker container
              run: |
                  cd gamb-back
                  docker-compose exec -it gambdrf python manage.py test


            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip
                pip install flake8 black

            - name: Run Flake8
              run: |
                cd gamb-back
                flake8 . --count --show-source --statistics
            
            - name: Run Black
              run: |
                black . --check

            - name: Shut down Docker containers
              run: |
                  cd gamb-back
                  docker compose down 
    front:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4.2.2
            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 22.15.0
            - name: Install dependencies
              run: |
                  cd gamb-front
                  npm install

            - name: Lint
              run: |
                    cd gamb-front
                    npm run lint 

            - name: Build
              run: |
                  cd gamb-front
                  npm run build

    generate-diagram:
      needs: back
      runs-on: ubuntu-latest

      # Esta etapa só será executada se houver alterações nos modelos do Django
      # ou se houver arquivos adicionados, modificados ou removidos no diretório gamb-back
      # e se o evento for um push.
      # Isso garante que o diagrama só seja gerado quando necessário.

      if: >
        github.event_name == 'push' && 
        contains(join(github.event.head_commit.modified, '\n'), 'gamb-back/gambiarra/models') || 
        contains(join(github.event.head_commit.added, '\n'), 'gamb-back/gambiarra/models') || 
        contains(join(github.event.head_commit.removed, '\n'), 'gamb-back/gambiarra/models')
      steps:
        - uses: actions/checkout@v4
        - name: Instalar Graphviz e dependências
          run: |
            sudo apt update
            sudo apt install -y graphviz
            python -m pip install --upgrade pip
            pip install django django-extensions

        - name: Gerar diagrama com timestamp
          run: |
            cd gamb-back
            mkdir -p diagrams
            TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
            python manage.py graph_models gambiarra -o diagrams/gambiarra_$TIMESTAMP.png