name: CI

on:
    push:
        branches: ["*"]
    pull_request:
        branches: ["*"]

jobs:
    test:
        runs-on: ubuntu-latest
        env:
            DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
            DEBUG: ${{ secrets.DEBUG }}
            DJANGO_LOGLEVEL: ${{ secrets.DJANGO_LOGLEVEL }}
            DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
            DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
            DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
            DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
            DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
       
        steps:
            - uses: actions/checkout@v4
              with:
                change_path: "gamb-back"
                
            # Configura o Docker Buildx
            - name: Instalar Docker Compose
              run: sudo apt-get update && sudo apt-get install -y docker-compose

            - name: Run up
              run: |
                  docker compose -f docker-compose.test.yml up  -d

            - name: Run tests inside Docker container
              run: |
                  docker compose exec -it gambdrf python manage.py test

            - name: Shut down Docker containers
              run: |
                  docker compose down 
    build:
        runs-on: ubuntu-latest
        
        steps:
            - uses: actions/checkout@v4.2.2
            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 22.15.0
                  change_path: "gamb-front"

            - name: Install dependencies
              run: |
                  npm install
            - name: Build
              run: |
                  npm run build
            - name: Test
              run: |
                  npm test
