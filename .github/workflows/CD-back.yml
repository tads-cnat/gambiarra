name: CD Back

on:
  push:
    branches: ["298-0---implementar-cd-de-deploy-do-projeto"]
  pull_request:
    branches: ["298-0---implementar-cd-de-deploy-do-projeto"]

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: gamb-back
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get semantic version
        id: version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          change_path: "gamb-back"
          major_pattern: "/^(feat!: | style!: | fix!: | test!:)$/"
          minor_pattern: "feat:"

      - name: Print version
        env:
          STEPS_CONTEXT: ${{ toJson(steps.version.outputs) }}
        run: echo "$STEPS_CONTEXT"

      - name: Login to Dockerhub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.USER_DH_BACK_LEO }}
          password: ${{ secrets.PASSW_DH_BACK_LEO }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./gamb-back/
          push: true
          tags: |
            leveau/gamb_back_image:latest
            leveau/gamb_back_image:${{ steps.version.outputs.version }}

  deploy-app:
    runs-on: ubuntu-22.04
    needs: [build-and-push-image]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 52.22.187.150 >> ~/.ssh/known_hosts
          echo -e "Host ec2\n  HostName 52.22.187.150\n  User ubuntu\n  IdentityFile ~/.ssh/id_rsa\n  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy via SSH
        env:
          VERSION: ${{ needs.build-and-push-image.outputs.version }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DJANGO_LOGLEVEL: ${{ secrets.DJANGO_LOGLEVEL }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
          DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        run: |
            ssh ec2 << 'EOF'
            echo 'Conectado com sucesso!'

            docker pull leveau/gamb_back_image:latest
            docker pull leveau/gamb_back_image:${VERSION}

            docker compose down

            export DJANGO_SECRET_KEY="${DJANGO_SECRET_KEY}"
            export DEBUG="${DEBUG}"
            export DJANGO_LOGLEVEL="${DJANGO_LOGLEVEL}"
            export DJANGO_ALLOWED_HOSTS="${DJANGO_ALLOWED_HOSTS}"
            export DATABASE_ENGINE="${DATABASE_ENGINE}"
            export DATABASE_NAME="${DATABASE_NAME}"
            export DATABASE_USERNAME="${DATABASE_USERNAME}"
            export DATABASE_PASSWORD="${DATABASE_PASSWORD}"
            export DATABASE_HOST="${DATABASE_HOST}"
            export DATABASE_PORT="${DATABASE_PORT}"

            docker compose up -d

            docker image prune -f
            EOF
